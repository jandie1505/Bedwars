/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("java")
    id("com.gradleup.shadow") version "8.3.5"
}

group = "net.jandie1505"
version = "1.0-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "chaossquad-releases"
        url = uri("https://maven.chaossquad.net/releases")
    }
    maven {
        name = "chaossquad-snapshots"
        url = uri("https://maven.chaossquad.net/snapshots")
    }
    maven {
        name = "simonsators-repo"
        url = uri("https://simonsator.de/repo/")
    }
    maven {
        name = "rosewood-repo"
        url = uri("https://repo.rosewooddev.io/repository/public/")
    }
    maven {
        name = "jitpack"
        url = uri("https://jitpack.io/")
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT")
    implementation("net.chaossquad:mclib:main-efefa9980797b7ece229d498a2825d9fed4e1188")
    implementation("net.chaossquad:mclib-json:main-188b6f2059b1a8bf1bf547c6aeb98a0f89937a74")
    implementation("org.json:json:20250107")
    compileOnly("eu.cloudnetservice.cloudnet:bridge:4.0.0-RC10")
    compileOnly("eu.cloudnetservice.cloudnet:wrapper-jvm:4.0.0-RC10")
    compileOnly("eu.cloudnetservice.cloudnet:platform-inject-api:4.0.0-RC10")
    compileOnly("com.github.LeonMangler:SuperVanish:6.2.17")
    compileOnly("de.simonsator:Party-and-Friends-MySQL-Edition-Spigot-API:1.5.4-RELEASE")
    compileOnly("de.simonsator:spigot-party-api-for-party-and-friends:1.0.5-RELEASE")
    compileOnly("org.black_ixx:playerpoints:3.2.6")
    compileOnly("net.jandie1505:PlayerLevels-API:master-809c1e4a0992561a25a25a97c79bf17b9fa16aa1")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks {
    jar {
        archiveClassifier.set("original")
    }
    shadowJar {
        relocate("net.chaossquad.mclib", "net.jandie1505.bedwars.dependencies.net.chaossquad.mclib")
        relocate("org.json", "net.chaossquad.jandie1505.dependencies.org.json")
        archiveClassifier.set("")
    }
    build {
        dependsOn(shadowJar)
    }
}

tasks.withType<JavaCompile>().configureEach {
    options.compilerArgs.add("-Xlint:none")
    options.compilerArgs.remove("-Werror")
}
